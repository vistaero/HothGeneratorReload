package biz.orgin.minecraft.hothgenerator.schematic;

import biz.orgin.minecraft.hothgenerator.HothUtils;

public class GreenGarden implements Schematic
{
	private static final long serialVersionUID = 7522573034308707060L;
	public static Schematic instance = new GreenGarden();
	private static int WIDTH = 9;
	private static int LENGTH = 9;
	private static int HEIGHT = 5;
	private static String name = "GreenGarden";
	
	private final int[][][] matrix = new int[][][]
		{
			{  // Floor 0
				{-1,-1,-1,-1,-1,-1,-1,-1,-1,  0,0,0,0,0,0,0,0,0},
				{-1,-1,-1, 3, 3, 3,-1,-1,-1,  0,0,0,0,0,0,0,0,0},
				{-1,-1, 3, 3, 3, 3, 3,-1,-1,  0,0,0,0,0,0,0,0,0},
				{-1, 3, 3, 3, 3, 3, 3, 3,-1,  0,0,0,0,0,0,0,0,0},
				{-1, 3, 3, 3, 3, 3, 3, 3,-1,  0,0,0,0,0,0,0,0,0},
				{-1, 3, 3, 3, 3, 3, 3, 3,-1,  0,0,0,0,0,0,0,0,0},
				{-1,-1, 3, 3, 3, 3, 3,-1,-1,  0,0,0,0,0,0,0,0,0},
				{-1,-1,-1, 3, 3, 3,-1,-1,-1,  0,0,0,0,0,0,0,0,0},
				{-1,-1,-1,-1,-1,-1,-1,-1,-1,  0,0,0,0,0,0,0,0,0}
			},
			{  // Floor 1
				{-1,-1,-1, 3, 3, 3,-1,-1,-1,  0,0,0,0,0,0,0,0,0},
				{-1,-1, 3, 0, 0, 0, 3,-1,-1,  0,0,0,0,0,0,0,0,0},
				{-1, 3, 0, 0, 0, 0, 0, 3,-1,  0,0,0,0,0,0,0,0,0},
				{ 3, 0, 0, 0, 0, 0, 0, 0, 3,  0,0,0,0,0,0,0,0,0},
				{ 3, 0, 0, 0, 3,106,0, 0, 3,  0,0,0,0,0,2,0,0,0},
				{ 3, 0, 0,18, 0, 0, 0, 0, 3,  0,0,0,0,0,0,0,0,0},
				{-1, 3,18,18,18, 0, 0, 3,-1,  0,0,0,0,0,0,0,0,0},
				{-1,-1, 3,18, 0, 0, 3,-1,-1,  0,0,0,0,0,0,0,0,0},
				{-1,-1,-1, 3, 3, 3,-1,-1,-1,  0,0,0,0,0,0,0,0,0}
			},
			{  // Floor 2
				{-1,-1, 3, 3, 3, 3, 3,-1,-1,  0,0,0,0,0,0,0,0,0},
				{-1, 3, 0, 0, 0, 0, 0, 3,-1,  0,0,0,0,0,0,0,0,0},
				{ 3, 0, 0, 0, 0, 0, 0, 0, 3,  0,0,0,0,0,0,0,0,0},
				{ 3, 0, 0, 0, 0, 0, 0, 0, 3,  0,0,0,0,0,0,0,0,0},
				{ 3, 0, 0, 0, 0, 0, 0, 0, 3,  0,0,0,0,0,0,0,0,0},
				{ 3, 0,18,18,18, 0, 0, 0, 3,  0,0,0,0,0,0,0,0,0},
				{ 3, 0,18,17,18, 0, 0, 0, 3,  0,0,0,0,0,0,0,0,0},
				{-1, 3,18,18,18, 0, 0, 3,-1,  0,0,0,0,0,0,0,0,0},
				{-1,-1, 3, 3, 3, 3, 3,-1,-1,  0,0,0,0,0,0,0,0,0}
			},
			{  // Floor 3
				{-1,-1,-1, 3, 3, 3,-1,-1,-1,  0,0,0,0,0,0,0,0,0},
				{-1,-1, 3,31, 0, 0, 3,-1,-1,  0,0,0,1,0,0,0,0,0},
				{-1, 3,31,31, 0,37, 0, 3,-1,  0,0,1,1,0,0,0,0,0},
				{ 3,31,31,31,31, 0, 0,37, 3,  0,1,1,1,1,0,0,0,0},
				{ 3,31,31,31,89,31,83, 0, 3,  0,1,1,1,0,1,0,0,0},
				{ 3,31,31, 0,31, 0,38, 0, 3,  0,1,1,0,1,0,0,0,0},
				{-1, 3, 0,17, 0, 0, 0, 3,-1,  0,0,0,0,0,0,0,0,0},
				{-1,-1, 3, 0,38, 0, 3,-1,-1,  0,0,0,0,0,0,0,0,0},
				{-1,-1,-1, 3, 3, 3,-1,-1,-1,  0,0,0,0,0,0,0,0,0}
			},
			{  // Floor 4
				{-1,-1,-1,-1,-1,-1,-1,-1,-1,  0,0,0,0,0,0,0,0,0},
				{-1,-1,-1, 2, 2, 2,-1,-1,-1,  0,0,0,0,0,0,0,0,0},
				{-1,-1, 2, 2, 2, 2, 2,-1,-1,  0,0,0,0,0,0,0,0,0},
				{-1, 2, 2, 2, 2, 2, 2, 2,-1,  0,0,0,0,0,0,0,0,0},
				{-1, 2, 2, 2, 2, 2, 2, 8,-1,  0,0,0,0,0,0,0,0,0},
				{-1, 2, 2, 2, 2, 2, 2, 2,-1,  0,0,0,0,0,0,0,0,0},
				{-1,-1, 2, 2, 2, 2, 2,-1,-1,  0,0,0,0,0,0,0,0,0},
				{-1,-1,-1, 2, 2, 2,-1,-1,-1,  0,0,0,0,0,0,0,0,0},
				{-1,-1,-1,-1,-1,-1,-1,-1,-1,  0,0,0,0,0,0,0,0,0}
			}
		};
	
	private GreenGarden()
	{
	}
	
	public int getWidth() // Inner
	{
		return GreenGarden.WIDTH;
	}
	public int getLength() // Middle
	{
		return GreenGarden.LENGTH;
	}
	public int getHeight() // Outer
	{
		return GreenGarden.HEIGHT;
	}
	
	public int[][][] getMatrix()
	{
		return this.matrix;
	}

	@Override
	public String getName()
	{
		return GreenGarden.name;
	}

	@Override
	public Schematic rotate(int direction)
	{
		return HothUtils.rotateSchematic(direction, this);
	}
}